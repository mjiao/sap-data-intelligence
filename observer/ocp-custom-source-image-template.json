{
   "apiVersion": "template.openshift.io/v1",
   "kind": "Template",
   "message": "The vsystem-app observer and patcher will be started. You can watch the progress with the\nfollowing command: oc logs -f dc/sdi-observer\n",
   "metadata": {
      "annotations": {
         "description": "The template spawns the \"sdi-observer\" pod that observes the particular\nnamespace where SAP Data Intelligence runs and modifies its deployments\nand configuration to enable its pods to run.\n\nOn Red Hat Enterprise Linux CoreOS, SAP Data Intelligence's vsystem-vrep\nstatefulset needs to be patched to mount `emptyDir` volume at `/exports`\ndirectory in order to enable NFS exports in the container running on top\nof overlayfs which is the default filesystem in RHCOS.\n\nThe \"sdi-observer\" pod modifies vsystem-vrep statefulset as soon as it\nappears to enable the NFS exports.\n\nThe observer also allows to patch pipeline-modeler (aka \"vflow\") pods to\nmark registry as insecure.\n\nAdditionally, it patches diagnostics-fluentd daemonset to allow its pods\nto access log files on the host system. It also modifies it to parse\nplain text log files instead of preconfigured json.\n\nOn Red Hat Enterprise Linux CoreOS, \"vsystem-iptables\" containers need to\nbe run as privileged in order to load iptables-related kernel modules.\nSAP Data Hub containers named \"vsystem-iptables\" deployed as part of\nevery \"vsystem-app\" deployment attempt to modify iptables rules without\nhaving the necessary permissions. The ideal solution is to pre-load these\nmodules during node's startup. When not feasable, this template can also\nfix the permissions on-the-fly as the deployments are created.\n\nThe template must be instantiated before the installation of SAP Data\nHub. Also the namespace, where SAP Data Hub will be installed, must exist\nbefore the instantiation.\n\nTODO: document admin project role requirement.\n\nUsage:\n  If running in the same namespace as Data Intelligence, instantiate the\n  template as is in the desired namespace:\n\n    oc project $SDI_NAMESPACE\n    oc process -n $SDI_NAMESPACE sdi-observer NAMESPACE=$SDI_NAMESPACE | \\\n      oc create -f -\n\n  If running in a different/new namespace/project, instantiate the\n  template with parameters SDI_NAMESPACE and NAMESPACE, e.g.:\n\n    oc new-project $SDI_NAMESPACE\n    oc new-project sapdatahub-admin\n    oc process sdi-observer \\\n        SDI_NAMESPACE=$SDI_NAMESPACE \\\n        NAMESPACE=sapdatahub-admin | oc create -f -\n",
         "openshift.io/display-name": "OpenShift enabler and observer for SAP Data intelligence\n",
         "openshift.io/documentation-url": "https://access.redhat.com/articles/4324391",
         "openshift.io/provider-display-name": "Red Hat, Inc.",
         "sdi-observer/version": "0.1.3"
      },
      "name": "sdi-observer"
   },
   "objects": [
      {
         "apiVersion": "v1",
         "kind": "ServiceAccount",
         "metadata": {
            "labels": {
               "created-by": "sdi-observer-template",
               "deploymentconfig": "sdi-observer"
            },
            "name": "sdi-observer",
            "namespace": "${NAMESPACE}"
         }
      },
      {
         "apiVersion": "v1",
         "kind": "DeploymentConfig",
         "metadata": {
            "labels": {
               "created-by": "sdi-observer-template",
               "deploymentconfig": "sdi-observer",
               "sdi-observer/version": "0.1.3"
            },
            "name": "sdi-observer",
            "namespace": "${NAMESPACE}"
         },
         "spec": {
            "replicas": 1,
            "selector": {
               "deploymentconfig": "sdi-observer"
            },
            "strategy": {
               "type": "Rolling"
            },
            "template": {
               "metadata": {
                  "labels": {
                     "deploymentconfig": "sdi-observer"
                  }
               },
               "spec": {
                  "containers": [
                     {
                        "args": null,
                        "command": [
                           "/usr/local/bin/observer.sh"
                        ],
                        "env": [
                           {
                              "name": "SDI_OBSERVER_VERSION",
                              "value": "0.1.3"
                           },
                           {
                              "name": "DRY_RUN",
                              "value": "${DRY_RUN}"
                           },
                           {
                              "name": "NAMESPACE",
                              "value": "${NAMESPACE}"
                           },
                           {
                              "name": "FORCE_REDEPLOY",
                              "value": "${FORCE_REDEPLOY}"
                           },
                           {
                              "name": "REPLACE_SECRETS",
                              "value": "${REPLACE_SECRETS}"
                           },
                           {
                              "name": "OCP_MINOR_RELEASE",
                              "value": "${OCP_MINOR_RELEASE}"
                           },
                           {
                              "name": "SDI_OBSERVER_REPOSITORY",
                              "value": "${SDI_OBSERVER_REPOSITORY}"
                           },
                           {
                              "name": "SDI_OBSERVER_GIT_REVISION",
                              "value": "${SDI_OBSERVER_GIT_REVISION}"
                           },
                           {
                              "name": "SDI_NAMESPACE",
                              "value": "${SDI_NAMESPACE}"
                           },
                           {
                              "name": "SLCB_NAMESPACE",
                              "value": "${SLCB_NAMESPACE}"
                           },
                           {
                              "name": "MARK_REGISTRY_INSECURE",
                              "value": "${MARK_REGISTRY_INSECURE}"
                           },
                           {
                              "name": "MAKE_VSYSTEM_IPTABLES_PODS_PRIVILEGED",
                              "value": "${MAKE_VSYSTEM_IPTABLES_PODS_PRIVILEGED}"
                           },
                           {
                              "name": "NODE_LOG_FORMAT",
                              "value": "${NODE_LOG_FORMAT}"
                           },
                           {
                              "name": "REGISTRY",
                              "value": "${REGISTRY}"
                           },
                           {
                              "name": "DEPLOY_SDI_REGISTRY",
                              "value": "${DEPLOY_SDI_REGISTRY}"
                           },
                           {
                              "name": "DEPLOY_LETSENCRYPT",
                              "value": "${DEPLOY_LETSENCRYPT}"
                           },
                           {
                              "name": "SLCB_ROUTE_HOSTNAME",
                              "value": "${SLCB_ROUTE_HOSTNAME}"
                           },
                           {
                              "name": "INJECT_CABUNDLE",
                              "value": "${INJECT_CABUNDLE}"
                           },
                           {
                              "name": "CABUNDLE_SECRET_NAME",
                              "value": "${CABUNDLE_SECRET_NAME}"
                           },
                           {
                              "name": "MANAGE_VSYSTEM_ROUTE",
                              "value": "${MANAGE_VSYSTEM_ROUTE}"
                           },
                           {
                              "name": "VSYSTEM_ROUTE_HOSTNAME",
                              "value": "${VSYSTEM_ROUTE_HOSTNAME}"
                           },
                           {
                              "name": "SDI_NODE_SELECTOR",
                              "value": "${SDI_NODE_SELECTOR}"
                           },
                           {
                              "name": "LETSENCRYPT_ENVIRONMENT",
                              "value": "${LETSENCRYPT_ENVIRONMENT}"
                           },
                           {
                              "name": "REPLACE_PERSISTENT_VOLUME_CLAIMS",
                              "value": "${REPLACE_PERSISTENT_VOLUME_CLAIMS}"
                           },
                           {
                              "name": "SDI_REGISTRY_STORAGE_CLASS_NAME",
                              "value": "${SDI_REGISTRY_STORAGE_CLASS_NAME}"
                           },
                           {
                              "name": "SDI_REGISTRY_USERNAME",
                              "value": "${SDI_REGISTRY_USERNAME}"
                           },
                           {
                              "name": "SDI_REGISTRY_PASSWORD",
                              "value": "${SDI_REGISTRY_PASSWORD}"
                           },
                           {
                              "name": "SDI_REGISTRY_AUTHENTICATION",
                              "value": "${SDI_REGISTRY_AUTHENTICATION}"
                           },
                           {
                              "name": "SDI_REGISTRY_HTPASSWD_SECRET_NAME",
                              "value": "${SDI_REGISTRY_HTPASSWD_SECRET_NAME}"
                           },
                           {
                              "name": "SDI_REGISTRY_ROUTE_HOSTNAME",
                              "value": "${SDI_REGISTRY_ROUTE_HOSTNAME}"
                           },
                           {
                              "name": "SDI_REGISTRY_VOLUME_CAPACITY",
                              "value": "${SDI_REGISTRY_VOLUME_CAPACITY}"
                           },
                           {
                              "name": "SDI_REGISTRY_VOLUME_ACCESS_MODE",
                              "value": "${SDI_REGISTRY_VOLUME_ACCESS_MODE}"
                           },
                           {
                              "name": "EXPOSE_WITH_LETSENCRYPT",
                              "value": "${EXPOSE_WITH_LETSENCRYPT}"
                           },
                           {
                              "name": "SOURCE_IMAGESTREAM_NAME",
                              "value": "${SOURCE_IMAGESTREAM_NAME}"
                           },
                           {
                              "name": "SOURCE_IMAGESTREAM_TAG",
                              "value": "${SOURCE_IMAGESTREAM_TAG}"
                           },
                           {
                              "name": "SOURCE_IMAGE_PULL_SPEC",
                              "value": "${SOURCE_IMAGE_PULL_SPEC}"
                           }
                        ],
                        "image": " ",
                        "name": "sdi-observer",
                        "resources": {
                           "limits": {
                              "cpu": "2000m",
                              "memory": "768Mi"
                           },
                           "requests": {
                              "cpu": "400m",
                              "memory": "500m"
                           }
                        }
                     }
                  ],
                  "restartPolicy": "Always",
                  "serviceAccount": "sdi-observer",
                  "serviceAccountName": "sdi-observer"
               }
            },
            "triggers": [
               {
                  "type": "ConfigChange"
               },
               {
                  "imageChangeParams": {
                     "automatic": true,
                     "containerNames": [
                        "sdi-observer"
                     ],
                     "from": {
                        "kind": "ImageStreamTag",
                        "name": "sdi-observer:0.1.3-ocp${OCP_MINOR_RELEASE}"
                     }
                  },
                  "type": "ImageChange"
               }
            ]
         }
      },
      {
         "apiVersion": "rbac.authorization.k8s.io/v1",
         "kind": "ClusterRoleBinding",
         "metadata": {
            "labels": {
               "created-by": "sdi-observer-template",
               "deploymentconfig": "sdi-observer"
            },
            "name": "sdi-observer-admin-in-${NAMESPACE}"
         },
         "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "admin"
         },
         "subjects": [
            {
               "kind": "ServiceAccount",
               "name": "sdi-observer",
               "namespace": "${NAMESPACE}"
            }
         ]
      },
      {
         "apiVersion": "rbac.authorization.k8s.io/v1",
         "kind": "ClusterRole",
         "metadata": {
            "labels": {
               "created-by": "sdi-observer-template",
               "deploymentconfig": "sdi-observer"
            },
            "name": "sdi-observer-cluster-access-in-${NAMESPACE}"
         },
         "rules": [
            {
               "apiGroups": [
                  "config.openshift.io"
               ],
               "resources": [
                  "ingresses",
                  "clusteroperators"
               ],
               "verbs": [
                  "get",
                  "list",
                  "watch"
               ]
            },
            {
               "apiGroups": [
                  ""
               ],
               "resources": [
                  "namespaces"
               ],
               "verbs": [
                  "get",
                  "list",
                  "watch",
                  "patch",
                  "update",
                  "delete",
                  "create",
                  "delete"
               ]
            }
         ]
      },
      {
         "apiVersion": "rbac.authorization.k8s.io/v1",
         "kind": "ClusterRoleBinding",
         "metadata": {
            "labels": {
               "created-by": "sdi-observer-template",
               "deploymentconfig": "sdi-observer"
            },
            "name": "sdi-observer-cluster-access-in-${NAMESPACE}"
         },
         "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "sdi-observer-cluster-access-in-${NAMESPACE}"
         },
         "subjects": [
            {
               "kind": "ServiceAccount",
               "name": "sdi-observer",
               "namespace": "${NAMESPACE}"
            }
         ]
      },
      {
         "apiVersion": "rbac.authorization.k8s.io/v1",
         "kind": "Role",
         "metadata": {
            "labels": {
               "created-by": "sdi-observer-template",
               "deploymentconfig": "sdi-observer"
            },
            "name": "sdi-observer-in-${NAMESPACE}",
            "namespace": "${SDI_NAMESPACE}"
         },
         "rules": [
            {
               "apiGroups": [
                  ""
               ],
               "resources": [
                  "secrets"
               ],
               "verbs": [
                  "get",
                  "list",
                  "watch",
                  "patch",
                  "update",
                  "delete",
                  "create",
                  "delete"
               ]
            },
            {
               "apiGroups": [
                  ""
               ],
               "resources": [
                  "configmaps"
               ],
               "verbs": [
                  "get",
                  "list",
                  "watch",
                  "patch",
                  "update",
                  "delete"
               ]
            },
            {
               "apiGroups": [
                  "",
                  "authorization.openshift.io",
                  "rbac.authorization.k8s.io"
               ],
               "resources": [
                  "roles",
                  "rolebindings",
                  "serviceaccounts"
               ],
               "verbs": [
                  "get",
                  "list",
                  "watch",
                  "patch",
                  "update",
                  "delete",
                  "create",
                  "delete"
               ]
            },
            {
               "apiGroups": [
                  ""
               ],
               "resources": [
                  "namespaces",
                  "namespaces/status"
               ],
               "verbs": [
                  "get",
                  "list",
                  "watch",
                  "create"
               ]
            },
            {
               "apiGroups": [
                  "",
                  "project.openshift.io"
               ],
               "resources": [
                  "projects"
               ],
               "verbs": [
                  "get"
               ]
            },
            {
               "apiGroups": [
                  "apps",
                  "extensions"
               ],
               "resources": [
                  "deployments",
                  "deployments/scale",
                  "statefulsets",
                  "statefulsets/scale"
               ],
               "verbs": [
                  "get",
                  "list",
                  "watch",
                  "patch",
                  "update",
                  "delete"
               ]
            },
            {
               "apiGroups": [
                  "apps",
                  "extensions"
               ],
               "resources": [
                  "daemonsets"
               ],
               "verbs": [
                  "get",
                  "list",
                  "watch",
                  "patch",
                  "update",
                  "delete"
               ]
            },
            {
               "apiGroups": [
                  "apps",
                  "deploymentconfigs.apps.openshift.io"
               ],
               "resources": [
                  "deploymentconfigs"
               ],
               "verbs": [
                  "get",
                  "list",
                  "watch",
                  "delete"
               ]
            },
            {
               "apiGroups": [
                  "route.openshift.io/v1"
               ],
               "resources": [
                  "routes"
               ],
               "verbs": [
                  "get",
                  "list",
                  "watch",
                  "patch",
                  "update",
                  "delete",
                  "create",
                  "delete"
               ]
            },
            {
               "apiGroups": [
                  ""
               ],
               "resources": [
                  "service"
               ],
               "verbs": [
                  "get",
                  "list",
                  "watch",
                  "patch",
                  "update",
                  "delete",
                  "create",
                  "delete"
               ]
            },
            {
               "apiGroups": [
                  ""
               ],
               "resources": [
                  "events"
               ],
               "verbs": [
                  "create",
                  "delete",
                  "update",
                  "patch",
                  "deletecollection"
               ]
            },
            {
               "apiGroups": [
                  ""
               ],
               "resources": [
                  "pods/log"
               ],
               "verbs": [
                  "create",
                  "delete",
                  "update",
                  "patch",
                  "deletecollection"
               ]
            },
            {
               "apiGroups": [
                  "vsystem.datahub.sap.com"
               ],
               "resources": [
                  "appinstances"
               ],
               "verbs": [
                  "*"
               ]
            },
            {
               "apiGroups": [
                  "vsystem.datahub.sap.com"
               ],
               "resources": [
                  "workloads"
               ],
               "verbs": [
                  "*"
               ]
            },
            {
               "apiGroups": [
                  "vsystem.datahub.sap.com"
               ],
               "resources": [
                  "workloads/finalizers"
               ],
               "verbs": [
                  "update"
               ]
            }
         ]
      },
      {
         "apiVersion": "rbac.authorization.k8s.io/v1",
         "kind": "RoleBinding",
         "metadata": {
            "labels": {
               "created-by": "sdi-observer-template",
               "deploymentconfig": "sdi-observer"
            },
            "name": "sdi-observer",
            "namespace": "${SDI_NAMESPACE}"
         },
         "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "Role",
            "name": "sdi-observer-in-${NAMESPACE}",
            "namespace": "${SDI_NAMESPACE}"
         },
         "subjects": [
            {
               "kind": "ServiceAccount",
               "name": "sdi-observer",
               "namespace": "${NAMESPACE}"
            }
         ]
      },
      {
         "apiVersion": "rbac.authorization.k8s.io/v1",
         "kind": "Role",
         "metadata": {
            "labels": {
               "created-by": "sdi-observer-template",
               "deploymentconfig": "sdi-observer"
            },
            "name": "sdi-observer-for-slcbridge-in-${NAMESPACE}",
            "namespace": "${SLCB_NAMESPACE}"
         },
         "rules": [
            {
               "apiGroups": [
                  "",
                  "project.openshift.io"
               ],
               "resources": [
                  "projects"
               ],
               "verbs": [
                  "get"
               ]
            },
            {
               "apiGroups": [
                  ""
               ],
               "resources": [
                  "configmaps"
               ],
               "verbs": [
                  "get",
                  "list",
                  "watch",
                  "patch",
                  "update",
                  "delete"
               ]
            },
            {
               "apiGroups": [
                  "",
                  "authorization.openshift.io",
                  "rbac.authorization.k8s.io"
               ],
               "resources": [
                  "roles",
                  "rolebindings",
                  "serviceaccounts"
               ],
               "verbs": [
                  "get",
                  "list",
                  "watch",
                  "patch",
                  "update",
                  "delete",
                  "create",
                  "delete"
               ]
            },
            {
               "apiGroups": [
                  "route.openshift.io/v1"
               ],
               "resources": [
                  "routes"
               ],
               "verbs": [
                  "get",
                  "list",
                  "watch",
                  "patch",
                  "update",
                  "delete",
                  "create",
                  "delete"
               ]
            },
            {
               "apiGroups": [
                  ""
               ],
               "resources": [
                  "namespaces",
                  "namespaces/status"
               ],
               "verbs": [
                  "get",
                  "list",
                  "watch",
                  "create"
               ]
            },
            {
               "apiGroups": [
                  ""
               ],
               "resources": [
                  "service"
               ],
               "verbs": [
                  "get",
                  "list",
                  "watch",
                  "patch",
                  "update",
                  "delete",
                  "create",
                  "delete"
               ]
            }
         ]
      },
      {
         "apiVersion": "rbac.authorization.k8s.io/v1",
         "kind": "RoleBinding",
         "metadata": {
            "labels": {
               "created-by": "sdi-observer-template",
               "deploymentconfig": "sdi-observer"
            },
            "name": "sdi-observer-for-slcbridge-in-${NAMESPACE}",
            "namespace": "${SLCB_NAMESPACE}"
         },
         "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "Role",
            "name": "sdi-observer-for-slcbridge-in-${NAMESPACE}",
            "namespace": "${SLCB_NAMESPACE}"
         },
         "subjects": [
            {
               "kind": "ServiceAccount",
               "name": "sdi-observer",
               "namespace": "${NAMESPACE}"
            }
         ]
      },
      {
         "apiVersion": "rbac.authorization.k8s.io/v1",
         "kind": "ClusterRoleBinding",
         "metadata": {
            "labels": {
               "created-by": "sdi-observer-template",
               "deploymentconfig": "sdi-observer"
            },
            "name": "sdi-observer-node-reader-in-${NAMESPACE}"
         },
         "roleRef": {
            "apiGroup": "rbac.authorization.k8s.io",
            "kind": "ClusterRole",
            "name": "system:node-reader"
         },
         "subjects": [
            {
               "kind": "ServiceAccount",
               "name": "sdi-observer",
               "namespace": "${NAMESPACE}"
            }
         ]
      },
      {
         "apiVersion": "build.openshift.io/v1",
         "kind": "BuildConfig",
         "metadata": {
            "labels": {
               "created-by": "sdi-observer-template",
               "deploymentconfig": "sdi-observer",
               "sdi-observer/version": "0.1.3"
            },
            "name": "sdi-observer",
            "namespace": "${NAMESPACE}"
         },
         "spec": {
            "output": {
               "to": {
                  "kind": "ImageStreamTag",
                  "name": "sdi-observer:0.1.3-ocp${OCP_MINOR_RELEASE}"
               }
            },
            "runPolicy": "Serial",
            "source": {
               "dockerfile": "FROM openshift/cli:latest\nRUN dnf update -y --skip-broken --nobest ||:\n# TODO: jq is not yet available in EPEL-8\nRUN dnf install -y \\\n  https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm && \\\n  dnf install -y jq\nRUN dnf install -y \\\n  https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm && \\\n  dnf install -y parallel procps-ng bc git httpd-tools && dnf clean all -y\n# TODO: determine OCP version from environment\nRUN cd tmp; \\\n  curl -L -O https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest-${OCP_MINOR_RELEASE}/openshift-client-linux.tar.gz; \\\n  curl -L -O https://mirror.openshift.com/pub/openshift-v4/clients/ocp/latest-${OCP_MINOR_RELEASE}/sha256sum.txt\n# verify the downloaded tar\nRUN /bin/bash -c 'f=/tmp/openshift-client-linux.tar.gz; \\\n  got=\"$(awk '\"'\"'{print $1}'\"'\"' <(sha256sum \"$f\"))\"; \\\n  exp=\"$(awk '\"'\"'/openshift-client-linux-/ {print $1}'\"'\"' /tmp/sha256sum.txt | head -n 1)\"; \\\n  if [[ \"$got\" != \"$exp\" ]]; then printf \\\n    '\"'\"'Unexpected hashsum of %s (expected \"%s\", got \"%s\")\\n!'\"'\"' \"$f\" \"$exp\" \"$got\" >&2; \\\n    exit 1; \\\n  fi'\nRUN /bin/bash -c 'tar -C /usr/local/bin/ -xzvf /tmp/openshift-client-linux.tar.gz -T <(printf oc)'\nRUN rm -rfv /tmp/*\n# TODO: verify signatures as well\nRUN mkdir -p /usr/local/bin /usr/local/share/openshift-acme\nRUN git clone --depth 5 --single-branch \\\n  --branch ${LETSENCRYPT_REVISION} \\\n  ${LETSENCRYPT_REPOSITORY} /usr/local/share/openshift-acme\nRUN git clone --depth 5 --single-branch \\\n  --branch ${SDI_OBSERVER_GIT_REVISION} \\\n  ${SDI_OBSERVER_REPOSITORY} /usr/local/share/sap-data-intelligence\nRUN for bin in observer.sh deploy-registry.sh deploy-letsencrypt.sh; do \\\n      cp -lv $(find /usr/local/share/sap-data-intelligence \\\n                -type f -executable -name \"$bin\") \\\n        /usr/local/bin/$bin; \\\n      chmod a+rx /usr/local/bin/$bin; \\\n    done\nRUN ln -s /usr/local/share/sap-data-intelligence /usr/local/share/sdi\nWORKDIR /usr/local/share/sdi\nCMD [\"/usr/local/bin/observer.sh\"]"
            },
            "strategy": {
               "dockerStrategy": {
                  "from": {
                     "kind": "ImageStreamTag",
                     "name": "${SOURCE_IMAGESTREAM_NAME}:${SOURCE_IMAGESTREAM_TAG}"
                  },
                  "imageOptimizationPolicy": "SkipLayers"
               }
            },
            "triggers": [
               {
                  "type": "ImageChange"
               },
               {
                  "type": "ConfigChange"
               }
            ]
         },
         "version": "0.1.3"
      },
      {
         "apiVersion": "v1",
         "kind": "ImageStream",
         "metadata": {
            "labels": {
               "created-by": "sdi-observer-template"
            },
            "name": "sdi-observer",
            "namespace": "${NAMESPACE}"
         },
         "spec": null,
         "status": {
            "dockerImageRepository": ""
         }
      },
      {
         "apiVersion": "v1",
         "kind": "ImageStream",
         "metadata": {
            "labels": {
               "created-by": "sdi-observer-template"
            },
            "name": "${SOURCE_IMAGESTREAM_NAME}",
            "namespace": "${NAMESPACE}"
         },
         "spec": {
            "tags": [
               {
                  "from": {
                     "kind": "DockerImage",
                     "name": "${SOURCE_IMAGE_PULL_SPEC}"
                  },
                  "importPolicy": {
                     "scheduled": true
                  },
                  "name": "${SOURCE_IMAGESTREAM_TAG}",
                  "referencePolicy": {
                     "type": "Source"
                  }
               }
            ]
         },
         "status": {
            "dockerImageRepository": ""
         }
      }
   ],
   "parameters": [
      {
         "description": "If set to true, no action will be performed. The pod will just print\nwhat would have been executed.\n",
         "name": "DRY_RUN",
         "required": false,
         "value": "false"
      },
      {
         "description": "The desired namespace to deploy resources to. Defaults to the current\none.\n",
         "name": "NAMESPACE",
         "required": true
      },
      {
         "description": "Whether to forcefully replace existing objects and configuration files. To replace\nexising secrets as well, RECREATE_SECRETS needs to be set.\n",
         "name": "FORCE_REDEPLOY",
         "required": false,
         "value": "false"
      },
      {
         "description": "Whether to replace secrets like SDI Registry's htpasswd file if they exist already.\n",
         "name": "REPLACE_SECRETS",
         "required": false,
         "value": "false"
      },
      {
         "description": "Minor release of OpenShift Container Platform (e.g. 4.2). This value must match the OCP\nserver version. The biggest tolerated difference between the versions is 1 in the second\ndigit.\n",
         "name": "OCP_MINOR_RELEASE",
         "required": true,
         "value": "4.2"
      },
      {
         "description": "URL of SDI Observer's git repository to clone into sdi-observer image.\n",
         "name": "SDI_OBSERVER_REPOSITORY",
         "required": true,
         "value": "https://github.com/redhat-sap/sap-data-intelligence"
      },
      {
         "description": "Revision (e.g. tag, commit or branch) of SDI Observer's git repository to check out.\n",
         "name": "SDI_OBSERVER_GIT_REVISION",
         "required": true,
         "value": "master"
      },
      {
         "description": "The name of the SAP Data Intelligance namespace to manage. Defaults to the current one. It\nmust be set only in case the observer is running in a different namespace (see NAMESPACE).\n",
         "name": "SDI_NAMESPACE"
      },
      {
         "description": "The name of the namespace where SLC Bridge runs.\n",
         "name": "SLCB_NAMESPACE",
         "value": "sap-slcbridge"
      },
      {
         "description": "Set to true if the given or configured VFLOW_REGISTRY shall be marked as insecure in all\ninstances of Pipeline Modeler.\n",
         "name": "MARK_REGISTRY_INSECURE",
         "required": true,
         "value": "false"
      },
      {
         "description": "Patch deployments with vsystem-iptables container to make them privileged in order to load\nkernel modules they need. Unless true, it is assumed that the modules have been pre-loaded\non the worker nodes. This will make also vsystem-vrep-* pod privileged.\n",
         "name": "MAKE_VSYSTEM_IPTABLES_PODS_PRIVILEGED",
         "required": true,
         "value": "false"
      },
      {
         "description": "Format of the logging files on the nodes. Allowed values are \"json\" and \"text\".\nInitially, SDI fluentd pods are configured to parse \"json\" while OpenShift 4 uses\n\"text\" format by default. If not given, the default is \"text\".\n",
         "name": "NODE_LOG_FORMAT",
         "required": false
      },
      {
         "description": "The registry to mark as insecure. If not given, it will be determined from the\ninstaller-config secret in the SDI_NAMESPACE. If DEPLOY_SDI_REGISTRY is set to \"true\",\nthis variable will be used as the container image registry's hostname when creating the\ncorresponding route.\n",
         "name": "REGISTRY"
      },
      {
         "description": "Whether to deploy container image registry for the purpose of SAP Data Intelligence.\nRequires project admin role attached to the sdi-observer service account.\n",
         "name": "DEPLOY_SDI_REGISTRY",
         "required": false,
         "value": "false"
      },
      {
         "description": "Whether to deploy letsencrypt controller. Requires project admin role attached to the\nsdi-observer service account.\n",
         "name": "DEPLOY_LETSENCRYPT",
         "required": false,
         "value": "false"
      },
      {
         "description": "Expose SLC Bridge's service at the provided hostname using a route. If not given, it will\nbe exposed at slcb.apps.<clustername>.<basedomainname>.\n",
         "name": "SLCB_ROUTE_HOSTNAME",
         "required": false
      },
      {
         "description": "Inject CA certificate bundle into SAP Data Intelligence pods. The bundle can\nbe specified with CABUNDLE_SECRET_NAME. It is needed if either registry or s3 endpoint\nis secured by a self-signed certificate.\n",
         "name": "INJECT_CABUNDLE",
         "required": false,
         "value": "false"
      },
      {
         "description": "The name of the secret containing certificate authority bundle that shall be injected\ninto Data Intelligence pods. By default, the secret bundle is obtained from\nopenshift-ingress-operator namespace where the router-ca secret contains the certificate\nauthority used to signed all the edge and reencrypt routes that are inter alia used for\nSDI_REGISTRY and NooBaa S3 API services. The secret name may be optionally prefixed with\n$namespace/. For example, in the default value \"openshift-ingress-operator/router-ca\",\nthe \"openshift-ingress-operator\" stands for secret's namespace and \"router-ca\" stands for\nsecret's name. If no $namespace prefix is given, the secret is expected to reside in\nNAMESPACE where the SDI observer runs. All the entries present in the \"data\" field having\n\".crt\" or \".pem\" suffix will be concated to form the resulting \"cert\" file. This bundle\nwill also be used to create cmcertificates secret in SDI_NAMESPACE according to https://help.sap.com/viewer/a8d90a56d61a49718ebcb5f65014bbe7/3.0.latest/en-US/39e8e391d5984e919725e601f089db74.html\n",
         "name": "CABUNDLE_SECRET_NAME",
         "required": false,
         "value": "openshift-ingress-operator/router-ca"
      },
      {
         "description": "Whether to create vsystem route for vsystem service in SDI_NAMESPACE. The route will be\nof reencrypt type. The destination CA certificate for communication with the vsystem\nservice will be kept up to date by the observer. If set to \"remove\", the route will be\ndeleted, which is useful to temporarily disable access to vsystem service during SDI\nupdates.\n",
         "name": "MANAGE_VSYSTEM_ROUTE",
         "required": false,
         "value": "false"
      },
      {
         "description": "Expose the vsystem service at the provided hostname using a route. The value is applied\nonly if MANAGE_VSYSTEM_ROUTE is enabled. The hostname defaults to\nvsystem-<SDI_NAMESPACE>.<clustername>.<basedomainname>\n",
         "name": "VSYSTEM_ROUTE_HOSTNAME",
         "required": false
      },
      {
         "description": "Make pods in SDI_NAMESPACE schedule only on nodes matching the given node selector. The\nselector will be applied to the whole namespace and its daemonsets. Selector can contain\nmultiple key=value labels separated with commas.\nExample value: node-role.kubernetes.io/sdi=\n",
         "name": "SDI_NODE_SELECTOR",
         "required": false
      },
      {
         "description": "Either \"live\" or \"staging\". Use the latter when debugging SDI Observer's deployment.\n",
         "name": "LETSENCRYPT_ENVIRONMENT",
         "required": false,
         "value": "live"
      },
      {
         "description": "Whether to replace existing persistent volume claims like the one belonging to SDI\nRegistry.\n",
         "name": "REPLACE_PERSISTENT_VOLUME_CLAIMS",
         "required": false,
         "value": "false"
      },
      {
         "description": "Unless given, the default storage class will be used.\n",
         "name": "SDI_REGISTRY_STORAGE_CLASS_NAME",
         "required": false
      },
      {
         "description": "Will be used to generate htpasswd file to provide authentication data to the SDI Registry\nservice as long as SDI_REGISTRY_HTPASSWD_SECRET_NAME does not exist or REPLACE_SECRETS is\n\"true\".\n",
         "from": "user-[a-z0-9]{6}",
         "generate": "expression",
         "name": "SDI_REGISTRY_USERNAME",
         "required": false
      },
      {
         "description": "Will be used to generate htpasswd file to provide authentication data to the SDI Registry\nservice as long as SDI_REGISTRY_HTPASSWD_SECRET_NAME does not exist or REPLACE_SECRETS is\n\"true\".\n",
         "from": "[a-zA-Z0-9]{32}",
         "generate": "expression",
         "name": "SDI_REGISTRY_PASSWORD",
         "required": false
      },
      {
         "description": "Choose the authentication method of the SDI Registry. Value \"none\" disables authentication\naltogether. Defaults to \"basic\" where the provided htpasswd file is used to gate\nthe incoming authentication requests.\n",
         "name": "SDI_REGISTRY_AUTHENTICATION",
         "required": false,
         "value": "basic"
      },
      {
         "description": "A secret with htpasswd file with authentication data for the sdi image container If\ngiven and the secret exists, it will be used instead of SDI_REGISTRY_USERNAME and\nSDI_REGISTRY_PASSWORD.\n",
         "name": "SDI_REGISTRY_HTPASSWD_SECRET_NAME",
         "required": false,
         "value": "container-image-registry-htpasswd"
      },
      {
         "description": "Desired hostname of the exposed registry service. Defaults to\ncontainer-image-registry-<NAMESPACE>-apps.<cluster_name>.<base_domain>\nOverrides REGISTRY parameter.",
         "name": "SDI_REGISTRY_ROUTE_HOSTNAME",
         "required": false
      },
      {
         "description": "Volume space available for container images (e.g. 120Gi).\n",
         "name": "SDI_REGISTRY_VOLUME_CAPACITY",
         "required": false,
         "value": "120Gi"
      },
      {
         "description": "If the given SDI_REGISTRY_STORAGE_CLASS_NAME or the default storate class supports\n\"ReadWriteMany\" (\"RWX\") access mode, please change this to \"ReadWriteMany\".\n",
         "name": "SDI_REGISTRY_VOLUME_ACCESS_MODE",
         "required": false,
         "value": "ReadWriteOnce"
      },
      {
         "description": "Whether to expose routes annotated for letsencrypt controller. Requires project admin\nrole attached to the sdi-observer service account. Letsencrypt controller must be\ndeployed either via this observer or cluster-wide for this to have an effect.\nDefaults to the value of DEPLOY_LETSENCRYPT.",
         "name": "EXPOSE_WITH_LETSENCRYPT"
      },
      {
         "description": "Unless given, a local copy will be used.\n",
         "name": "LETSENCRYPT_REPOSITORY",
         "required": false,
         "value": "https://github.com/tnozicka/openshift-acme"
      },
      {
         "description": "Revision of letsencrypt repository to check out.\n",
         "name": "LETSENCRYPT_REVISION",
         "required": false,
         "value": "master"
      },
      {
         "description": "Pull specification for the base image for sdi-observer and/or container-image-registry.\nThe base image shall be RPM based and contain \"dnf\" binary for package management.\n",
         "name": "SOURCE_IMAGE_PULL_SPEC",
         "required": true,
         "value": "registry.centos.org/centos:8"
      },
      {
         "description": "Name of the imagestream to use for the custom source image.\n",
         "name": "SOURCE_IMAGESTREAM_NAME",
         "required": true,
         "value": "centos8"
      },
      {
         "description": "Tag in the custom source imagestream referring to the SOURCE_IMAGE_PULL_SPEC.\n",
         "name": "SOURCE_IMAGESTREAM_TAG",
         "required": true,
         "value": "latest"
      }
   ]
}
